services:
  ecommerce-order-api:
    build:
      context: ./ecommerce-order-api
      dockerfile: Dockerfile
    container_name: ecommerce-order-api
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ecommerce

  ecommerce-order-consumer:
    build: ./ecommerce-order-consumer
    container_name: ecommerce-order-consumer
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - ecommerce

  ecommerce-order-ui:
    build: ecommerce-order-ui
    container_name: ecommerce-order-ui
    ports:
      - "3000:3000"
    networks:
      - ecommerce

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce


volumes:
  mongo_data:
  rabbitmq_data:

networks:
  ecommerce:
    driver: bridge